name: CI/CD Pipeline

on:
  push:
    branches:
      - "**"

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      build_files: ${{ steps.filter.outputs.build_files }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Check for changes in build-related files
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            build_files:
              - 'Dockerfile'
              - 'main.py'
              - 'poetry.lock'
              - 'src/**'

  lint-and-format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run linting and formatting
        run: echo "Running linting and formatting checks..."

  python-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Run Python tests
        run: echo "Running Python tests..."

  build-and-push:
    needs: [detect-changes, lint-and-format, python-tests]
    if: |
      needs.detect-changes.outputs.build_files == 'true' && 
      (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Build Docker image
        run: echo "Building Docker image..."
      - name: Push Docker image to Azure Container Registry
        run: echo "Pushing Docker image to ACR..."

  deploy:
    needs: [build-and-push]
    if: |
      success() && 
      (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set environment
        run: |
          if [ "$GITHUB_REF" == "refs/heads/main" ]; then
            echo "ENV=prod" >> $GITHUB_ENV
          elif [ "$GITHUB_REF" == "refs/heads/dev" ]; then
            echo "ENV=dev" >> $GITHUB_ENV
          fi
      - name: Deploy to Kubernetes
        run: echo "Deploying to $ENV environment in Kubernetes cluster..."